"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dao",{

/***/ "./src/helpers/UserHelper.js":
/*!***********************************!*\
  !*** ./src/helpers/UserHelper.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BindContract: function() { return /* binding */ BindContract; },\n/* harmony export */   DaoInfo: function() { return /* binding */ DaoInfo; },\n/* harmony export */   DaoIsExist: function() { return /* binding */ DaoIsExist; },\n/* harmony export */   NetworkControl: function() { return /* binding */ NetworkControl; },\n/* harmony export */   WalletConnect: function() { return /* binding */ WalletConnect; },\n/* harmony export */   fetchAllDaos: function() { return /* binding */ fetchAllDaos; },\n/* harmony export */   fetchNextDaoId: function() { return /* binding */ fetchNextDaoId; }\n/* harmony export */ });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/lib/esm/index.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constant */ \"./constant.js\");\n\n\nasync function NetworkControl() {\n    const chainId = 80001;\n    if (window.ethereum.networkVersion !== chainId) {\n        try {\n            await window.ethereum.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [\n                    {\n                        chainId: \"0x13881\"\n                    }\n                ]\n            });\n        } catch (err) {\n            // This error code indicates that the chain has not been added to MetaMask\n            if (err.code === 4902) {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainName: \"Mumbai Testnet\",\n                            chainId: \"0x13881\",\n                            nativeCurrency: {\n                                name: \"MATIC\",\n                                decimals: 18,\n                                symbol: \"MATIC\"\n                            },\n                            rpcUrls: [\n                                \"https://polygon-mumbai.g.alchemy.com/v2/qk87xs0xeViFziM8xyAckMpVat-e_32T\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://mumbai.polygonscan.com/\"\n                            ]\n                        }\n                    ]\n                });\n            }\n        }\n    }\n}\n_c = NetworkControl;\nasync function addNetworkToMetamask() {\n    try {\n        await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n                _constant__WEBPACK_IMPORTED_MODULE_1__.params[0]\n            ]\n        });\n        console.log(\"Network added to MetaMask\");\n    } catch (error) {\n        console.error(\"Error adding network to MetaMask:\", error);\n    }\n}\nasync function WalletConnect() {\n    let account = null;\n    if (typeof window.ethereum !== \"undefined\") {\n        try {\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            account = accounts[0];\n            const chainId = await window.ethereum.request({\n                method: \"eth_chainId\"\n            });\n            if (chainId !== _constant__WEBPACK_IMPORTED_MODULE_1__.params[0].chainId) {\n                console.log(\"Adding the required network to MetaMask\");\n                await addNetworkToMetamask();\n            }\n            window.ethereum.on(\"chainChanged\", async ()=>{\n                const updatedChainId = await window.ethereum.request({\n                    method: \"eth_chainId\"\n                });\n                if (updatedChainId !== _constant__WEBPACK_IMPORTED_MODULE_1__.params[0].chainId) {\n                    console.log(\"Adding the required network to MetaMask\");\n                    await addNetworkToMetamask();\n                }\n            });\n            window.ethereum.on(\"accountsChanged\", (newAccounts)=>{\n                account = newAccounts[0];\n                console.log(\"Account changed:\", account);\n            });\n        } catch (error) {\n            console.error(\"Error connecting to MetaMask:\", error);\n        }\n    } else {\n        console.error(\"MetaMask not detected. Please install MetaMask extension.\");\n    }\n    return account;\n}\n_c1 = WalletConnect;\nasync function DaoIsExist(address) {\n    const web3 = new web3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](window.ethereum);\n    const factoryContract = new web3.eth.Contract(_constant__WEBPACK_IMPORTED_MODULE_1__.FACTORY_JSON[\"abi\"], _constant__WEBPACK_IMPORTED_MODULE_1__.DAO_ADDRESS);\n    let retVal = false;\n    await factoryContract.methods.dao_exists(address).call().then((result)=>{\n        retVal = result;\n    }).catch((err)=>alert(err));\n    return retVal;\n}\n_c2 = DaoIsExist;\nfunction BindContract(abi, address) {\n    const web3 = new web3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](window.ethereum);\n    return new web3.eth.Contract(abi, address);\n}\n_c3 = BindContract;\nasync function fetchNextDaoId(contract) {\n    let nextDaoId;\n    if (contract) {\n        await contract.methods.next_dao_id().call().then((result)=>{\n            nextDaoId = result;\n        });\n    }\n    return nextDaoId;\n}\nasync function fetchAllDaos(contract) {\n    const web3 = new web3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](window.ethereum);\n    const numOfDaos = await fetchNextDaoId(contract);\n    //fetch the address of the top DAO\n    let res;\n    if (contract) {\n        await contract.methods.top_dao().call().then((result)=>{\n            res = result;\n        });\n    }\n    let allDaos = [];\n    //fetch all the DAOs created by the DAOFactory contract\n    //fetch if the dao is deleted or not, if it is deleted, then we will not show it in the UI\n    //fetch the name and description of the DAOs\n    //push the DAOs to allDaos array\n    for(let i = 0; i < numOfDaos; i++){\n        let daoAddress, daoName, daoDescription, imageUrl;\n        await contract.methods.all_daos(i).call().then((result)=>{\n            daoAddress = result;\n        });\n        //check if the DAO is deleted or not, if it is deleted, then we will not show it in the UI\n        if (await DaoIsExist(daoAddress)) {\n            let daoContract = new web3.eth.Contract(_constant__WEBPACK_IMPORTED_MODULE_1__.DAO_JSON[\"abi\"], daoAddress);\n            await daoContract.methods.dao_name().call().then((result)=>{\n                daoName = result;\n            });\n            await daoContract.methods.dao_description().call().then((result)=>{\n                daoDescription = result;\n            });\n            await daoContract.methods.imageUrl().call().then((result)=>{\n                imageUrl = result;\n            });\n            allDaos.push([\n                daoAddress,\n                daoName,\n                daoDescription,\n                imageUrl\n            ]);\n        }\n    }\n    return allDaos;\n}\nasync function DaoInfo(contract, address) {\n    var retVal = [\n        0,\n        0,\n        0,\n        0,\n        0\n    ]; // Children Num, Name, Description, Proposal Names,img\n    contract.methods.num_children(String(address)).call().then((result)=>{\n        retVal[0] = result;\n    });\n    contract.methods.dao_name().call().then((result)=>{\n        retVal[1] = result;\n    });\n    contract.methods.dao_description().call().then((result)=>{\n        retVal[2] = result;\n    });\n    contract.methods.getProposalName().call().then((result)=>{\n        retVal[3] = result;\n    });\n    contract.methods.imageUrl().call().then((result)=>{\n        retVal[4] = result;\n    });\n    return retVal;\n}\n_c4 = DaoInfo;\n\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NetworkControl\");\n$RefreshReg$(_c1, \"WalletConnect\");\n$RefreshReg$(_c2, \"DaoIsExist\");\n$RefreshReg$(_c3, \"BindContract\");\n$RefreshReg$(_c4, \"DaoInfo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/helpers/UserHelper.js\n"));

/***/ })

});